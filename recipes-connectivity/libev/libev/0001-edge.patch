From ba6f66bd81734f7c1ffa699a405940898399d364 Mon Sep 17 00:00:00 2001
From: OpenEmbedded <oe.patch@oe>
Date: Fri, 5 Jun 2020 00:15:30 +0000

---
 ev++.h     | 1 +
 ev.c       | 2 +-
 ev.h       | 1 +
 ev_epoll.c | 3 ++-
 4 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/ev++.h b/ev++.h
index 0e1b60d..3d9c5ac 100644
--- a/ev++.h
+++ b/ev++.h
@@ -63,6 +63,7 @@ namespace ev {
     NONE     = EV_NONE,
     READ     = EV_READ,
     WRITE    = EV_WRITE,
+    EDGE     = EV_EDGE,
 #if EV_COMPAT3
     TIMEOUT  = EV_TIMEOUT,
 #endif
diff --git a/ev.c b/ev.c
index ffa4091..aeabd7e 100644
--- a/ev.c
+++ b/ev.c
@@ -3922,7 +3922,7 @@ ev_io_start (EV_P_ ev_io *w) EV_NOEXCEPT
     return;
 
   assert (("libev: ev_io_start called with negative fd", fd >= 0));
-  assert (("libev: ev_io_start called with illegal event mask", !(w->events & ~(EV__IOFDSET | EV_READ | EV_WRITE))));
+  assert (("libev: ev_io_start called with illegal event mask", !(w->events & ~(EV__IOFDSET | EV_READ | EV_WRITE | EV_EDGE))));
 
 #if EV_VERIFY >= 2
   assert (("libev: ev_io_start called on watcher with invalid fd", fd_valid (fd)));
diff --git a/ev.h b/ev.h
index f5bac00..aca317a 100644
--- a/ev.h
+++ b/ev.h
@@ -220,6 +220,7 @@ enum {
   EV_NONE     =            0x00, /* no events */
   EV_READ     =            0x01, /* ev_io detected read will not block */
   EV_WRITE    =            0x02, /* ev_io detected write will not block */
+  EV_EDGE     =            0X04, /* ev_io edge trigger */
   EV__IOFDSET =            0x80, /* internal use only */
   EV_IO       =         EV_READ, /* alias for type-detection */
   EV_TIMER    =      0x00000100, /* timer timed out */
diff --git a/ev_epoll.c b/ev_epoll.c
index 440e46b..a53f3c0 100644
--- a/ev_epoll.c
+++ b/ev_epoll.c
@@ -91,7 +91,8 @@ epoll_modify (EV_P_ int fd, int oev, int nev)
   ev.data.u64 = (uint64_t)(uint32_t)fd
               | ((uint64_t)(uint32_t)++anfds [fd].egen << 32);
   ev.events   = (nev & EV_READ  ? EPOLLIN  : 0)
-              | (nev & EV_WRITE ? EPOLLOUT : 0);
+              | (nev & EV_WRITE ? EPOLLOUT : 0)
+              | (nev & EV_EDGE ? EPOLLET : 0);
 
   if (expect_true (!epoll_ctl (backend_fd, oev && oldmask != nev ? EPOLL_CTL_MOD : EPOLL_CTL_ADD, fd, &ev)))
     return;
